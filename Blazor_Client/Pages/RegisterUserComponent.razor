@page "/register"
@using SharedModels.Models
@using System.Text.Json 
@inject HttpClient httpClient


<h3>Register New User Component</h3>
<div class="container">
    <EditForm Model="@user">
         <DataAnnotationsValidator>
            
         </DataAnnotationsValidator>
          <ValidationSummary></ValidationSummary>
        <div class="form-group">
             <label>Email</label>
             <InputText  class="form-control" @bind-Value="@user.Email"></InputText>
        </div>
         <div class="form-group">
             <label>Password</label>
             <InputText type="password" class="form-control" @bind-Value="@user.Password"></InputText>
        </div>
         <div class="form-group">
             <label>Confirm Password</label>
             <InputText type="password" class="form-control" @bind-Value="@user.ConfirmPassword"></InputText>
        </div>
         <div class="form-group">
             <button class="btn btn-primary" @onclick="@clear">Clear</button>
             <button class="btn btn-success" @onclick="@register">Register</button>
        </div>
        <hr/> 
        <div class="container">
            <strong>@responseData.Message</strong>
        </div>
    </EditForm>
</div>   
@code {
    private RegisterUser user;
    private ResponseData responseData;

    protected override Task OnInitializedAsync()
    {
        user = new RegisterUser();
        responseData = new ResponseData();
        return base.OnInitializedAsync();
    }
    void clear()
    {
        user = new RegisterUser(); 
    }

    async Task register()
    {
        var response = await httpClient.PostAsJsonAsync("http://localhost:60626/api/Auth/Register", user);
        var message = await response.Content.ReadAsStringAsync();
        responseData = JsonSerializer.Deserialize<ResponseData>(message);
    }
}
